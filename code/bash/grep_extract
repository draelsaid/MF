#!/bin/bash
# Adam El-Said MF 2019
# Purpose: 

# 1. Extract values of surface pressure, specific humidity, temperature, 
# divergence, kinetic energy, vorticity from every single dated folder within 
# an experiment 

# 2. Total aforementioned variables and then put them into appropriate files by variable.

# Run this INSIDE the experiment folder (for example, inside folder 6C5T)

plvl=100 # pressure level desired
exp=$(pwd | cut -d'/' -f 8)

# Searches through all 'std' files, and extracts the line at pressure level 100 for them all
grep -inr --include "std*" -w "$plvl" > out1 

awk '{print $1}' out1 | cut -d'/' -f 1 | cut -d'P' -f 1 | sed 's/[^0-9]*//g' > dates  # extracts dates
awk '{print $1}' out1 | cut -d'/' -f 3 | cut -d':' -f 1 > fnames # extracts file names
awk '{print $3}' out1                                   > vals   # extracts values 

# Brings the 3 extracted columns above into one file and sorts them according to the first THEN the second column
paste <(cat fnames) <(cat dates) <(cat vals) | sort -k1 -k2 > out2

fnms=$(sort -u fnames) # extracts the filenames uniquely
fnms_a=( $fnms )       # turns it into an array

# This block extracts columns containing word mimicking the filename and puts them in a relevantly named file
awk '/stdavd.y/' out2 | awk '{print $2 ", " $3}' > $exp.stdavd.lvl$plvl.tot
awk '/stdavke.y/' out2 | awk '{print $2 ", " $3}' > $exp.stdavke.lvl$plvl.tot
awk '/stdavq.y/' out2 | awk '{print $2 ", " $3}' > $exp.stdavq.lvl$plvl.tot
awk '/stdavt.y/' out2 | awk '{print $2 ", " $3}' > $exp.stdavt.lvl$plvl.tot
awk '/stdavv.y/' out2 | awk '{print $2 ", " $3}' > $exp.stdavv.lvl$plvl.tot
awk '/stdevps.y/' out2 | awk '{print $2 ", " $3}' > $exp.stdevps.lvl$plvl.tot

#rm fnames dates vals out1 out2

#fnm=$(awk '{print $1}' out1 | cut -d':' -f 1)
#vals=$(awk '{print $1}' out1 | cut -d':' -f 1 | awk '{print $3}' out1)
#date=$(pwd | awk -F/ '{print $(NF-1)}' | cut -c -11)

# Casts variables as arrays
#fnm_a=( $fnm )
#vals_a=( $vals )
#date_a=( $date )


#for i in ${#fnm_a[@]}; do
 
#echo "${date_a[$i]} , ${vals_a[$i]}" >> "${fnm_a[$i]}.tot"

# takes 2 off the end
#echo ${fnm_a[0]::-2}

#printf "%0.s$date " {1..6}

#awk '{getline l < "out1"; print $0"\t"l"\t"m"}' out4

#fnm1=$(echo $INPUT| cut -d':' -f 1)

# Takes the 1st and 3rd columns of the result of the above
#awk '{print $1 $3}' out1 > out2

# Prints second to last folder name of current folder
#pwd | awk -F/ '{print $(NF-1)}' >> out2

#awk '{print $3}' out1 >> out.3

# >> this will append to end of current file
